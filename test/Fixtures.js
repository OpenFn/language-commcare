const fixtures = {
    submit: {
        requestBody: {
            "program": "eBAyeGv0exc",
            "orgUnit": "DiszpKrYNg8",
            "eventDate": "2013-05-17",
            "status": "COMPLETED",
            "storedBy": "admin",
            "coordinate": {
                "latitude": "59.8",
                "longitude": "10.9"
            },
            "dataValues": [
                {
                    "dataElement": "qrur9Dvnyt5",
                    "value": "99"
                }, {
                    "dataElement": "oZg33kd9taw",
                    "value": "Female"
                }, {
                    "dataElement": "msodh3rEMJa",
                    "value": "2013-05-18"
                }
            ]
        },
        responseBody: {
            domain: null,
            _events: {},
            _eventsCount: 0,
            _maxListeners: undefined,
            res: IncomingMessage {
                _readableState: ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: [Object],
                    length: 0,
                    pipes: null,
                    pipesCount: 0,
                    flowing: true,
                    ended: true,
                    endEmitted: true,
                    reading: false,
                    sync: true,
                    needReadable: false,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    defaultEncoding: 'utf8',
                    ranOut: false,
                    awaitDrain: 0,
                    readingMore: false,
                    decoder: [Object],
                    encoding: 'utf8'
                },
                readable: false,
                domain: null,
                _events: {
                    end: [Object],
                    data: [Object],
                    error: [Object],
                    close: [Function : bound emit]
                },
                _eventsCount: 4,
                _maxListeners: undefined,
                socket: Socket {
                    connecting: false,
                    _hadError: false,
                    _handle: null,
                    _parent: null,
                    _host: null,
                    _readableState: [Object],
                    readable: false,
                    domain: null,
                    _events: [Object],
                    _eventsCount: 8,
                    _maxListeners: undefined,
                    _writableState: [Object],
                    writable: false,
                    allowHalfOpen: false,
                    destroyed: true,
                    _bytesDispatched: 1763,
                    _sockname: null,
                    _pendingData: null,
                    _pendingEncoding: '',
                    server: null,
                    _server: null,
                    parser: null,
                    _httpMessage: [Object],
                    read: [Function],
                    _consuming: true,
                    _idleNext: null,
                    _idlePrev: null,
                    _idleTimeout: -1
                },
                connection: Socket {
                    connecting: false,
                    _hadError: false,
                    _handle: null,
                    _parent: null,
                    _host: null,
                    _readableState: [Object],
                    readable: false,
                    domain: null,
                    _events: [Object],
                    _eventsCount: 8,
                    _maxListeners: undefined,
                    _writableState: [Object],
                    writable: false,
                    allowHalfOpen: false,
                    destroyed: true,
                    _bytesDispatched: 1763,
                    _sockname: null,
                    _pendingData: null,
                    _pendingEncoding: '',
                    server: null,
                    _server: null,
                    parser: null,
                    _httpMessage: [Object],
                    read: [Function],
                    _consuming: true,
                    _idleNext: null,
                    _idlePrev: null,
                    _idleTimeout: -1
                },
                httpVersionMajor: 1,
                httpVersionMinor: 1,
                httpVersion: '1.1',
                complete: true,
                headers: {
                    server: 'nginx/1.10.0 (Ubuntu)',
                    date: 'Thu, 23 Feb 2017 01:35:06 GMT',
                    'content-type': 'text/html; charset=utf-8',
                    'transfer-encoding': 'chunked',
                    connection: 'close',
                    'x-commcarehq-formid': 'b70a259b-4808-4876-929c-68de71fe8d6e',
                    'content-language': 'en',
                    expires: 'Thu, 01 Dec 1994 16:00:00 GMT',
                    vary: 'Accept-Language, Cookie',
                    location: 'https://www.commcarehq.org',
                    pragma: 'no-cache',
                    'cache-control': 'private, no-cache, no-store, must-revalidate, proxy-revalidate',
                    http_x_openrosa_version: '1.0',
                    'set-cookie': [Object]
                },
                rawHeaders: [
                    'Server',
                    'nginx/1.10.0 (Ubuntu)',
                    'Date',
                    'Thu, 23 Feb 2017 01:35:06 GMT',
                    'Content-Type',
                    'text/html; charset=utf-8',
                    'Transfer-Encoding',
                    'chunked',
                    'Connection',
                    'close',
                    'X-CommCareHQ-FormID',
                    'b70a259b-4808-4876-929c-68de71fe8d6e',
                    'Content-Language',
                    'en',
                    'Expires',
                    'Thu, 01 Dec 1994 16:00:00 GMT',
                    'Vary',
                    'Accept-Language, Cookie',
                    'Location',
                    'https://www.commcarehq.org',
                    'Pragma',
                    'no-cache',
                    'Cache-Control',
                    'private, no-cache, no-store, must-revalidate, proxy-revalidate',
                    'HTTP_X_OPENROSA_VERSION',
                    '1.0',
                    'Set-Cookie',
                    'sessionid=rve0f7iqtw5mwxsugt665a80mn43v7pl; expires=Thu, 09-Mar-2017 01:35:06 GMT; httponly; Max-Age=1209600; Path=/'
                ],
                trailers: {},
                rawTrailers: [],
                upgrade: false,
                url: '',
                method: null,
                statusCode: 201,
                statusMessage: 'CREATED',
                client: Socket {
                    connecting: false,
                    _hadError: false,
                    _handle: null,
                    _parent: null,
                    _host: null,
                    _readableState: [Object],
                    readable: false,
                    domain: null,
                    _events: [Object],
                    _eventsCount: 8,
                    _maxListeners: undefined,
                    _writableState: [Object],
                    writable: false,
                    allowHalfOpen: false,
                    destroyed: true,
                    _bytesDispatched: 1763,
                    _sockname: null,
                    _pendingData: null,
                    _pendingEncoding: '',
                    server: null,
                    _server: null,
                    parser: null,
                    _httpMessage: [Object],
                    read: [Function],
                    _consuming: true,
                    _idleNext: null,
                    _idlePrev: null,
                    _idleTimeout: -1
                },
                _consuming: true,
                _dumped: false,
                req: ClientRequest {
                    domain: null,
                    _events: [Object],
                    _eventsCount: 4,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: true,
                    sendDate: false,
                    _removedHeader: [Object],
                    _contentLength: 1459,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Object],
                    connection: [Object],
                    _header: 'POST /a/demo/receiver/40f23560d5de2b05b208554c705d1c10/ HTTP/1.1\r\nHost: 138.197.12.144\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/1.8.3\r\nAuthorization: Basic am9obi5oYXJwZXJAZ3JhYmxlc2VydmljZXMuY29tOmYxciNiYWxs\r\nContent-Type: application/xml\r\nContent-Length: 1459\r\nConnection: close\r\n\r\n',
                    _headers: [Object],
                    _headerNames: [Object],
                    _onPendingData: null,
                    agent: [Object],
                    socketPath: undefined,
                    method: 'POST',
                    path: '/a/demo/receiver/40f23560d5de2b05b208554c705d1c10/',
                    _ended: true,
                    parser: null,
                    res: [Circular]
                },
                text: '<OpenRosaResponse xmlns="http://openrosa.org/http/response"><message nature="submit_error">IllegalCaseId: case_id must not be empty</message></OpenRosaResponse>',
                read: [Function],
                body: undefined
            },
            request: Request {
                domain: null,
                _events: {
                    end: [Function : bound _clearTimeout]
                },
                _eventsCount: 1,
                _maxListeners: undefined,
                _agent: false,
                _formData: null,
                method: 'POST',
                url: 'http://138.197.12.144/a/demo/receiver/40f23560d5de2b05b208554c705d1c10/',
                _header: {
                    'user-agent': 'node-superagent/1.8.3',
                    authorization: 'Basic am9obi5oYXJwZXJAZ3JhYmxlc2VydmljZXMuY29tOmYxciNiYWxs',
                    'content-type': 'application/xml'
                },
                header: {
                    'User-Agent': 'node-superagent/1.8.3',
                    Authorization: 'Basic am9obi5oYXJwZXJAZ3JhYmxlc2VydmljZXMuY29tOmYxciNiYWxs',
                    'Content-Type': 'application/xml'
                },
                writable: true,
                _redirects: 0,
                _maxRedirects: 5,
                cookies: '',
                qs: {},
                qsRaw: [],
                _redirectList: [],
                _streamRequest: false,
                _data: '<?xml version="1.0" encoding="UTF-8"?>\n<data name="foo" uiVersion="1" version="148" xmlns="http://openrosa.org/formdesigner/123" xmlns:jrm="http://dev.commcarehq.org/jr/xforms">\n\t<Module_Name></Module_Name>\n\t<Module_Number></Module_Number>\n\t<Training_Session_Name>undefined undefined</Training_Session_Name>\n\t<Current_Module></Current_Module>\n\t<Case_Id></Case_Id>\n\t<Parent_Id></Parent_Id>\n\t<subcase_0>\n\t\t<n0:case case_id="" date_modified="2017-02-23T01:35:06.084Z" user_id="456" xmlns:n0="http://commcarehq.org/case/transaction/v2">\n\t\t\t<n0:create>\n\t\t\t\t<n0:case_name>undefined undefined</n0:case_name>\n\t\t\t\t<n0:owner_id></n0:owner_id>\n\t\t\t\t<n0:case_type>baz</n0:case_type>\n\t\t\t</n0:create>\n\t\t\t<n0:update>\n\t\t\t\t<n0:Case_Id></n0:Case_Id>\n\t\t\t\t<n0:Date>2017-02-23T01:35:06.084Z</n0:Date>\n\t\t\t\t<n0:Module_Name></n0:Module_Name>\n\t\t\t\t<n0:Module_Number></n0:Module_Number>\n\t\t\t\t<n0:Current_Module></n0:Current_Module>\n\t\t\t\t<n0:Parent_Id></n0:Parent_Id>\n\t\t\t</n0:update>\n\t\t\t<n0:index>\n\t\t\t\t<n0:parent case_type="baz"></n0:parent>\n\t\t\t</n0:index>\n\t\t</n0:case>\n\t</subcase_0>\n\t<n1:case case_id="" date_modified="2017-02-23T01:35:06.084Z" user_id="qux" xmlns:n1="http://commcarehq.org/case/transaction/v2"/>\n\t<n2:meta xmlns:n2="http://openrosa.org/jr/xforms">\n\t\t<n2:deviceID>789</n2:deviceID>\n\t\t<n2:timeStart>2017-02-23T01:35:06.085Z</n2:timeStart>\n\t\t<n2:timeEnd>2017-02-23T01:35:06.085Z</n2:timeEnd>\n\t\t<n2:username>quux</n2:username>\n\t\t<n2:userID>123</n2:userID>\n\t</n2:meta>\n</data>',
                req: ClientRequest {
                    domain: null,
                    _events: [Object],
                    _eventsCount: 4,
                    _maxListeners: undefined,
                    output: [],
                    outputEncodings: [],
                    outputCallbacks: [],
                    outputSize: 0,
                    writable: true,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    useChunkedEncodingByDefault: true,
                    sendDate: false,
                    _removedHeader: [Object],
                    _contentLength: 1459,
                    _hasBody: true,
                    _trailer: '',
                    finished: true,
                    _headerSent: true,
                    socket: [Object],
                    connection: [Object],
                    _header: 'POST /a/demo/receiver/40f23560d5de2b05b208554c705d1c10/ HTTP/1.1\r\nHost: 138.197.12.144\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/1.8.3\r\nAuthorization: Basic am9obi5oYXJwZXJAZ3JhYmxlc2VydmljZXMuY29tOmYxciNiYWxs\r\nContent-Type: application/xml\r\nContent-Length: 1459\r\nConnection: close\r\n\r\n',
                    _headers: [Object],
                    _headerNames: [Object],
                    _onPendingData: null,
                    agent: [Object],
                    socketPath: undefined,
                    method: 'POST',
                    path: '/a/demo/receiver/40f23560d5de2b05b208554c705d1c10/',
                    _ended: true,
                    parser: null,
                    res: [Object]
                },
                protocol: 'http:',
                host: '138.197.12.144',
                _callback: [Function],
                res: IncomingMessage {
                    _readableState: [Object],
                    readable: false,
                    domain: null,
                    _events: [Object],
                    _eventsCount: 4,
                    _maxListeners: undefined,
                    socket: [Object],
                    connection: [Object],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: [Object],
                    rawHeaders: [Object],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '',
                    method: null,
                    statusCode: 201,
                    statusMessage: 'CREATED',
                    client: [Object],
                    _consuming: true,
                    _dumped: false,
                    req: [Object],
                    text: '<OpenRosaResponse xmlns="http://openrosa.org/http/response"><message nature="submit_error">IllegalCaseId: case_id must not be empty</message></OpenRosaResponse>',
                    read: [Function],
                    body: undefined
                },
                response: [Circular],
                _timeout: 0,
                called: true
            },
            req: ClientRequest {
                domain: null,
                _events: {
                    drain: [Function],
                    error: [Function],
                    response: [Function],
                    prefinish: [Function : requestOnPrefinish]
                },
                _eventsCount: 4,
                _maxListeners: undefined,
                output: [],
                outputEncodings: [],
                outputCallbacks: [],
                outputSize: 0,
                writable: true,
                _last: true,
                chunkedEncoding: false,
                shouldKeepAlive: false,
                useChunkedEncodingByDefault: true,
                sendDate: false,
                _removedHeader: {
                    'content-length': false
                },
                _contentLength: 1459,
                _hasBody: true,
                _trailer: '',
                finished: true,
                _headerSent: true,
                socket: Socket {
                    connecting: false,
                    _hadError: false,
                    _handle: null,
                    _parent: null,
                    _host: null,
                    _readableState: [Object],
                    readable: false,
                    domain: null,
                    _events: [Object],
                    _eventsCount: 8,
                    _maxListeners: undefined,
                    _writableState: [Object],
                    writable: false,
                    allowHalfOpen: false,
                    destroyed: true,
                    _bytesDispatched: 1763,
                    _sockname: null,
                    _pendingData: null,
                    _pendingEncoding: '',
                    server: null,
                    _server: null,
                    parser: null,
                    _httpMessage: [Circular],
                    read: [Function],
                    _consuming: true,
                    _idleNext: null,
                    _idlePrev: null,
                    _idleTimeout: -1
                },
                connection: Socket {
                    connecting: false,
                    _hadError: false,
                    _handle: null,
                    _parent: null,
                    _host: null,
                    _readableState: [Object],
                    readable: false,
                    domain: null,
                    _events: [Object],
                    _eventsCount: 8,
                    _maxListeners: undefined,
                    _writableState: [Object],
                    writable: false,
                    allowHalfOpen: false,
                    destroyed: true,
                    _bytesDispatched: 1763,
                    _sockname: null,
                    _pendingData: null,
                    _pendingEncoding: '',
                    server: null,
                    _server: null,
                    parser: null,
                    _httpMessage: [Circular],
                    read: [Function],
                    _consuming: true,
                    _idleNext: null,
                    _idlePrev: null,
                    _idleTimeout: -1
                },
                _header: 'POST /a/demo/receiver/40f23560d5de2b05b208554c705d1c10/ HTTP/1.1\r\nHost: 138.197.12.144\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/1.8.3\r\nAuthorization: Basic am9obi5oYXJwZXJAZ3JhYmxlc2VydmljZXMuY29tOmYxciNiYWxs\r\nContent-Type: application/xml\r\nContent-Length: 1459\r\nConnection: close\r\n\r\n',
                _headers: {
                    host: '138.197.12.144',
                    'accept-encoding': 'gzip, deflate',
                    'user-agent': 'node-superagent/1.8.3',
                    authorization: 'Basic am9obi5oYXJwZXJAZ3JhYmxlc2VydmljZXMuY29tOmYxciNiYWxs',
                    'content-type': 'application/xml',
                    'content-length': 1459
                },
                _headerNames: {
                    host: 'Host',
                    'accept-encoding': 'Accept-Encoding',
                    'user-agent': 'User-Agent',
                    authorization: 'Authorization',
                    'content-type': 'Content-Type',
                    'content-length': 'Content-Length'
                },
                _onPendingData: null,
                agent: Agent {
                    domain: null,
                    _events: [Object],
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: [Object],
                    requests: {},
                    sockets: [Object],
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256
                },
                socketPath: undefined,
                method: 'POST',
                path: '/a/demo/receiver/40f23560d5de2b05b208554c705d1c10/',
                _ended: true,
                parser: null,
                res: IncomingMessage {
                    _readableState: [Object],
                    readable: false,
                    domain: null,
                    _events: [Object],
                    _eventsCount: 4,
                    _maxListeners: undefined,
                    socket: [Object],
                    connection: [Object],
                    httpVersionMajor: 1,
                    httpVersionMinor: 1,
                    httpVersion: '1.1',
                    complete: true,
                    headers: [Object],
                    rawHeaders: [Object],
                    trailers: {},
                    rawTrailers: [],
                    upgrade: false,
                    url: '',
                    method: null,
                    statusCode: 201,
                    statusMessage: 'CREATED',
                    client: [Object],
                    _consuming: true,
                    _dumped: false,
                    req: [Circular],
                    text: '<OpenRosaResponse xmlns="http://openrosa.org/http/response"><message nature="submit_error">IllegalCaseId: case_id must not be empty</message></OpenRosaResponse>',
                    read: [Function],
                    body: undefined
                }
            },
            links: {},
            text: '<OpenRosaResponse xmlns="http://openrosa.org/http/response"><message nature="submit_error">IllegalCaseId: case_id must not be empty</message></OpenRosaResponse>',
            body: {},
            files: {},
            buffered: true,
            headers: {
                server: 'nginx/1.10.0 (Ubuntu)',
                date: 'Thu, 23 Feb 2017 01:35:06 GMT',
                'content-type': 'text/html; charset=utf-8',
                'transfer-encoding': 'chunked',
                connection: 'close',
                'x-commcarehq-formid': 'b70a259b-4808-4876-929c-68de71fe8d6e',
                'content-language': 'en',
                expires: 'Thu, 01 Dec 1994 16:00:00 GMT',
                vary: 'Accept-Language, Cookie',
                location: 'https://www.commcarehq.org',
                pragma: 'no-cache',
                'cache-control': 'private, no-cache, no-store, must-revalidate, proxy-revalidate',
                http_x_openrosa_version: '1.0',
                'set-cookie': ['sessionid=rve0f7iqtw5mwxsugt665a80mn43v7pl; expires=Thu, 09-Mar-2017 01:35:06 GMT; httponly; Max-Age=1209600; Path=/']
            },
            header: {
                server: 'nginx/1.10.0 (Ubuntu)',
                date: 'Thu, 23 Feb 2017 01:35:06 GMT',
                'content-type': 'text/html; charset=utf-8',
                'transfer-encoding': 'chunked',
                connection: 'close',
                'x-commcarehq-formid': 'b70a259b-4808-4876-929c-68de71fe8d6e',
                'content-language': 'en',
                expires: 'Thu, 01 Dec 1994 16:00:00 GMT',
                vary: 'Accept-Language, Cookie',
                location: 'https://www.commcarehq.org',
                pragma: 'no-cache',
                'cache-control': 'private, no-cache, no-store, must-revalidate, proxy-revalidate',
                http_x_openrosa_version: '1.0',
                'set-cookie': ['sessionid=rve0f7iqtw5mwxsugt665a80mn43v7pl; expires=Thu, 09-Mar-2017 01:35:06 GMT; httponly; Max-Age=1209600; Path=/']
            },
            statusCode: 201,
            status: 201,
            statusType: 2,
            info: false,
            ok: true,
            redirect: false,
            clientError: false,
            serverError: false,
            error: false,
            accepted: false,
            noContent: false,
            badRequest: false,
            unauthorized: false,
            notAcceptable: false,
            forbidden: false,
            notFound: false,
            charset: 'utf-8',
            type: 'text/html',
            setEncoding: [Function : bound],
            redirects: []
        }
    }

    export {fixtures};

    export default[
        {
            pattern : 'https://play.commcare.org/demo(.*)',

            fixtures(match, params, headers) {
                if (match[1] === '/api/events') {
                    return {body: fixtures.event.responseBody, params, headers}
                }

                throw new Error(`No Fixture Match\ngot: ${JSON.stringify(match, 2, null)}`)
            },

            post(match, data) {
                return {
                    ok: true,
                    match,
                    ...data
                }
            }
        }
    ]
